/* <프로젝트의 플러그인 의존성 관리를 위한 설정> */
buildscript {
    ext { // ext: build.gradle에서 전역변수를 설정하겠다는 의미
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/* <앞서 선언한 플러그인 의존성들을 적용할 것인 지 결정하는 코드>
    밑의 네 개의 플러그인은 자바와 스프링 부트를 사용하기 위해 쓰는 필수 플러그인이니 항상 추가해야 한다. */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // spring-boot의 의존성들을 관리해주는 플러그인

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

/* repositories는 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을 지를 정한다.
기본적으로 mavelCentral을 많이 사용하지만, 최근에는 라이브러리 업로드 난이도때문에 jcenter도 많이 사용한다. */
repositories {
    mavenCentral()
    jcenter()
}

/* dependencies는 프로젝트 개발에 필요한 의존성들을 선언하는 곳이다. */
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') // 스프링부트용 Spring Data JPA 추상화 라이브러리, 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전관리를 해준다.
    implementation('com.h2database:h2')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
// h2: 인메모리 관계형 데이터베이스, 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있다.
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}